trigger:
- main

variables:
  dockerRegistryServiceConnection: '66fd2d64-6c81-4561-96f3-8fdf492a1ebb'
  imageRepository: 'gtcloudtestappaks'
  containerRegistry: 'mycontainerregistryakstest.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'Azure Pipelines'
    steps:
    - task: Docker@2
      displayName: Build and push image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)
    
    - task: CopyFiles@2
      displayName: 'Copy manifests'
      inputs:
        SourceFolder: 'manifests'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/manifests'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish manifests'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/manifests'
        ArtifactName: 'manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: 'Azure Pipelines'
    environment: 'gtcloud89TESTAPPAKS.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests
            
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: 'acr-auth'
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                acr-auth
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)